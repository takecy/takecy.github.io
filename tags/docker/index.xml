<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on blog &lt;- takecy</title><link>https://blog.takecy.dev/tags/docker/</link><description>Recent content in Docker on blog &lt;- takecy</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 03 Feb 2018 01:36:11 +0900</lastBuildDate><atom:link href="https://blog.takecy.dev/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Goの依存管理ツールのdepのpruneがdeprecatedになった</title><link>https://blog.takecy.dev/posts/golang-dep-prune-deprecated/</link><pubDate>Sat, 03 Feb 2018 01:36:11 +0900</pubDate><guid>https://blog.takecy.dev/posts/golang-dep-prune-deprecated/</guid><description>&lt;p>Goの依存関係管理には&lt;a href="https://github.com/golang/dep">dep&lt;/a>がデファクトだし、使っているのだが、
最近 &lt;code>prune&lt;/code> コマンドがdeprecatedされた。&lt;/p>
&lt;h3 id="depのprune">depのprune&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ dep prune -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>このコマンドは、&lt;code>ensure&lt;/code> で山盛り追加されるvendorから、使用していないpackageを除外してくれて、レポジトリが軽くなるので気に入ってよく使っていた。
Makefileにもだいたい以下のように書いていた。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-makefile" data-lang="makefile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">update&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dep ensure -update -v &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> dep prune -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="実行時に警告が">実行時に警告が&lt;/h3>
&lt;p>多分0.4からこういう警告が出るようになった。&lt;/p>
&lt;pre tabindex="0">&lt;code>Pruning is now performed automatically by dep ensure.
Set prune settings in Gopkg.toml and it it will be applied when running ensure.

This command currently still prunes as it always has, to ease the transition.
However, it will be removed in a future version of dep.

Now is the time to update your Gopkg.toml and remove `dep prune` from any scripts.
&lt;/code>&lt;/pre>&lt;p>意訳&lt;/p></description></item><item><title>Timezoneが取れるalpineのDockerイメージを作る</title><link>https://blog.takecy.dev/posts/golang-docker-alpine-timezone/</link><pubDate>Sat, 03 Feb 2018 01:07:23 +0900</pubDate><guid>https://blog.takecy.dev/posts/golang-docker-alpine-timezone/</guid><description>&lt;p>Goで書いたアプリのDockerイメージをできるだけ小さくしようとして、
&lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/">multi stage build&lt;/a>にそってやったら、timezone情報が取れなくてpanicが発生して(&amp;lsquo;A`)になったので、その対応策について。&lt;/p>
&lt;p>コード全体はこちら。&lt;br>
&lt;a href="https://github.com/takecy/tz-sample">&lt;img src="https://gh-card.dev/repos/takecy/tz-sample.svg?fullname">&lt;/a>
&lt;/p>
&lt;h3 id="panic-になるコード">Panic になるコード&lt;/h3>
&lt;p>普通にmulti stage buildでalpineにビルド済イメージを &lt;code>COPY&lt;/code> して実行すると、下記コードはpanicする。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">jst&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">LoadLocation&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Asia/Tokyo&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> panic(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>alpineは &lt;code>/etc/localtime&lt;/code> がないため。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>panic: open /usr/local/go/lib/time/zoneinfo.zip: no such file or directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>goroutine &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">[&lt;/span>running&lt;span style="color:#f92672">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main.main&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /go/src/github.com/takecy/tz/main.go:11 +0x22b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make: *** &lt;span style="color:#f92672">[&lt;/span>run_alpine&lt;span style="color:#f92672">]&lt;/span> Error &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="対応">対応&lt;/h3>
&lt;p>対応は難しいことはなく、単に &lt;code>tzdata&lt;/code> を入れればよい。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">RUN&lt;/span> apk --no-cache add tzdata&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>全体の例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> golang:1.9.3-alpine AS build&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> . $GOPATH/src/github.com/takecy/tz&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> $GOPATH/src/github.com/takecy/tz&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> go build -o tz .&lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> mv tz /usr/local/bin/&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> alpine:3.6&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> apk --no-cache add tzdata&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> --from&lt;span style="color:#f92672">=&lt;/span>build /usr/local/bin/tz /usr/local/bin/&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">CMD&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;tz&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>

&lt;a href="https://github.com/takecy/tz-sample"}>
 &lt;img src="http://favicon.hatena.ne.jp/?url=https%3a%2f%2fgithub.com%2ftakecy%2ftz-sample" style="float:left;margin:5px 5px 0px 5px" />
 takecy/tz-sample
&lt;/a>
&lt;br/></description></item><item><title>UbuntuにGoをインストールしたDokcerイメージを作る</title><link>https://blog.takecy.dev/posts/golang-docker-ubuntu-install/</link><pubDate>Sat, 24 Oct 2015 23:18:26 +0900</pubDate><guid>https://blog.takecy.dev/posts/golang-docker-ubuntu-install/</guid><description>&lt;p>Dokcernizeってますか？
最近やっとちょっとだけDockerさんに話しかけたりしています。&lt;/p>
&lt;p>UbuntuにGo入れたイメージを作るDokcerfileの大事なところはこんなです。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">RUN&lt;/span> wget https://storage.googleapis.com/golang/go1.5.1.linux-amd64.tar.gz&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> tar -C /usr/local -xf go1.5.1.linux-amd64.tar.gz&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENV&lt;/span> PATH&lt;span style="color:#f92672">=&lt;/span>$PATH:/usr/local/go/bin&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENV&lt;/span> GOPATH&lt;span style="color:#f92672">=&lt;/span>$HOME/go&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENV&lt;/span> PATH&lt;span style="color:#f92672">=&lt;/span>$GOPATH/bin:$PATH&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>一方、Vagrantはそれはそれで、sshしてhogehogeって感じがサーバいじるのと似ててとっつきやすい。
クラウド()になって、
sshしてあれこれインストールしてサーバ設定というのはもうなくなっちゃったよね。&lt;/p>
&lt;p>最近は、サーバ設定(というかインスタンス設定)はTerraformだし、ルーチン処理やリリースはAnsibleだし。
かといって、sshも必要で、shellスクリプトは前より書くようになったんじゃないかと思うくらいだし。&lt;/p>
&lt;p>自分の場合、一応アプリケーションエンジニアというくくりになるのだけど、
こんなにインフラ寄りの作業をやっていることにふと気づいて驚いている。&lt;/p>
&lt;p>今後もっと、アプリの人はインフラの知識を、インフラの人はアプリの知識をな感じで、
近づいていくんだろうか。&lt;br>
システム開発における、エンジニア一人の担当範囲が広くなっていってる感じ。&lt;br>
なんて面白い時代だ。&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on blog &lt;- takecy</title>
    <link>https://takecy.github.io/tags/docker/</link>
    <description>Recent content in Docker on blog &lt;- takecy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/takecy&#34;&gt;takecy&lt;/a&gt; 2018</copyright>
    <lastBuildDate>Sat, 24 Oct 2015 23:18:26 +0900</lastBuildDate>
    
	<atom:link href="https://takecy.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>UbuntuにGoをインストールしたDokcerイメージを作る</title>
      <link>https://takecy.github.io/posts/golang-docker-ubuntu-install/</link>
      <pubDate>Sat, 24 Oct 2015 23:18:26 +0900</pubDate>
      
      <guid>https://takecy.github.io/posts/golang-docker-ubuntu-install/</guid>
      <description>Dokcernizeってますか？ 最近やっとちょっとだけDockerさんに話しかけたりしています。
UbuntuにGo入れたイメージを作るDokcerfileの大事なところはこんなです。
RUN wget https://storage.googleapis.com/golang/go1.5.1.linux-amd64.tar.gz RUN tar -C /usr/local -xf go1.5.1.linux-amd64.tar.gz ENV PATH=$PATH:/usr/local/go/bin ENV GOPATH=$HOME/go ENV PATH=$GOPATH/bin:$PATH   よかったらどうぞ。
Ubuntu Golang
 今まで主にVagrantでローカル開発環境を作ってきたのだけど、Dockerってすごいね。。(遅)
何より、「捨てやすい」のが素晴らしい。使い捨て。さっと起動してさっと動かしてさっと捨てる 。イミュータブル！
一方、Vagrantはそれはそれで、sshしてhogehogeって感じがサーバいじるのと似ててとっつきやすい。 クラウド()になって、 sshしてあれこれインストールしてサーバ設定というのはもうなくなっちゃったよね。
最近は、サーバ設定(というかインスタンス設定)はTerraformだし、ルーチン処理やリリースはAnsibleだし。 かといって、sshも必要で、shellスクリプトは前より書くようになったんじゃないかと思うくらいだし。
自分の場合、一応アプリケーションエンジニアというくくりになるのだけど、 こんなにインフラ寄りの作業をやっていることにふと気づいて驚いている。
今後もっと、アプリの人はインフラの知識を、インフラの人はアプリの知識をな感じで、 近づいていくんだろうか。
システム開発における、エンジニア一人の担当範囲が広くなっていってる感じ。
なんて面白い時代だ。</description>
    </item>
    
  </channel>
</rss>
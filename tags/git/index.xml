<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on blog ← takecy</title>
    <link>https://blog.takecy.dev/tags/git/</link>
    <description>Recent content in git on blog ← takecy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://github.com/takecy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;takecy&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 04 Mar 2018 11:12:53 +0900</lastBuildDate><atom:link href="https://blog.takecy.dev/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Goプロジェクトでvendorディレクトリをバージョン管理すべきなのか</title>
      <link>https://blog.takecy.dev/posts/golang-vendoring-version/</link>
      <pubDate>Sun, 04 Mar 2018 11:12:53 +0900</pubDate>
      
      <guid>https://blog.takecy.dev/posts/golang-vendoring-version/</guid>
      <description>Goプロジェクトの依存パッケージは、 dep などのツールにより vendor ディレクトリに入るけど、「vendorをバージョン管理するべきかどうか」で定期的にチーム内で議論になる。
管理する場合、しない場合、それぞれの場合のメリット・デメリットをあげてみつつ考えてみる。
vendorをバージョン管理する場合 メリット 動かすまでが楽 何よりもこれ。cloneすればすぐbuild/runできる。動いている状態の完全なアプリケーション/パッケージとしてあがっているのだから当然。特定時点のスナップショット的なものになっているので、とにかく最初の一歩が早い。
デリット リポ内のファイル数が爆増する cloneするのが遅い。。大きめのリポジトリになると結構待たされる。
あと検索が弱くなる。vendor内も引っかかるのでGithubWeb上での検索は諦め気味。リポジトリを落としてからローカルで探すとこが多い。
vendorをバージョン管理しない場合 メリット リポジトリが綺麗 この問題の先輩であるnpmはnode_modulesの中身を全部Githubにいれたりしない。
Githubが提供する .gitignore にもnode_modulesが書いてある。(Goにvendorはいない)
GithubWeb上で検索しやすくもなる。
デメリット 動かすまでが大変 depがnpmほど洗練されていない、またGoの依存はGithubのURLを指定できるようになっているのもあり、masterブランチを指定してる場合など悲惨だ。
このアプリケーション/パッケージが動いた時のmasterの状態などわかるはずもない。Gopkg.lockにrevisionとしてcommit shaが記録されているものの、force pushされたりするとあてにならないし、そもそも dep ensure 自体が結構な割合で失敗する。
まとめ 結局、一長一短で、メリット・デメリットが反対になっている。
個人的には 動かすまでが楽 これをものすごく重要だと感じており、Go自体のワンバイナリで気軽にどこでも実行できるというメリットとともに、 リポジトリをCloneしたらすぐrunできる というのは素晴らしいと思っている。
また、マイクロサービス化が進んでいくと、1つのアプリケーションを構築するのに複数のリポジトリを使うことになり、1つの修正や機能の実装のために複数リポジトリへの変更が必要になってくる。その時、各リポジトリのvendorを復元する手間が無視できないコストになる。本質的でないこの作業にコストがかかるのは色々ストレスだし、とにかくツライ。。
ので、個人的な結論としては。 vendorもバージョン管理する(Githubに全部突っ込む) にしたい。</description>
    </item>
    
  </channel>
</rss>
